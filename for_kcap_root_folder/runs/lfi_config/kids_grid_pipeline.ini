[DEFAULT]
MY_PATH      = /home/ruyi_wsl/
stats_name   = xipm
;CSL_PATH     = %(MY_PATH)s/kcap/cosmosis-standard-library/
KCAP_PATH    = $COSMOSIS_SRC_DIR
INPUT_FOLDER = %(MY_PATH)s/Cat_to_Obs_K1000_P1/data/kids/
RESULTS_PATH = $KIDS_MOCKS_DIR
blind         = C
name_tag      = with_m_bias
cat_version   = V1.0.0A_ugriZYJHKs_photoz_SG_mask_LF_svn_309c_2Dbins_v2_goldclasses_Flag_SOM_Fid


[pipeline]
modules = sigma8toAs one_parameter_hmcode camb extrapolate_power load_nz_fits source_photoz_bias projection cl2xi xip_binned xim_binned scale_cuts 2x2pt_like 
values = $KIDS_PIPELINE_VALUES_FILE
priors =
extra_output = cosmological_parameters/S_8 cosmological_parameters/sigma_8 cosmological_parameters/omega_m cosmological_parameters/omega_nu cosmological_parameters/omega_lambda cosmological_parameters/cosmomc_theta
quiet = F
timing = T
debug = T

[grid]
nsample_dimension = 1
save = $KIDS_MOCKS_DIR/$KIDS_MOCKS_ROOT_NAME

[runtime]
sampler = grid

[output]
filename = %(RESULTS_PATH)s/out.txt
format = text

[sigma8toAs]
file = %(KCAP_PATH)s/utils/sigma8toAs.py

[one_parameter_hmcode]
file = %(KCAP_PATH)s/utils/one_parameter_hmcode.py
a_0 = 0.98
a_1 = -0.12

[camb]
file = %(KCAP_PATH)s/cosmosis-standard-library/boltzmann/pycamb/camb_interface.py
do_reionization = F
mode = transfer
nonlinear = pk
halofit_version = mead
neutrino_hierarchy = normal
kmax = 20.0
zmid = 2.0
nz_mid = 100
zmax = 6.0
nz = 150
background_zmax = 6.0
background_zmin = 0.0
background_nz = 6000

[extrapolate_power]
file = %(KCAP_PATH)s/cosmosis-standard-library/boltzmann/extrapolate/extrapolate_power.py
kmax = 500.0

[load_nz_fits]
file = %(KCAP_PATH)s/cosmosis-standard-library/number_density/load_nz_fits/load_nz_fits.py
nz_file = %(KCAP_PATH)s/runs/lfi_config/xipm_KIDS1000_BlindC_with_m_bias_V1.0.0A_ugriZYJHKs_photoz_SG_mask_LF_svn_309c_2Dbins_v2_goldclasses_Flag_SOM_Fid.fits
data_sets = SOURCE

[source_photoz_bias]
file = %(KCAP_PATH)s/cosmosis-standard-library/number_density/photoz_bias/photoz_bias.py
mode = additive
sample = nz_SOURCE
bias_section = nofz_shifts
interpolation = cubic
output_deltaz = T
output_section_name = delta_z_out

[projection]
file = %(KCAP_PATH)s/cosmosis-standard-library/structure/projection/project_2d.py
ell_min = 10.0
ell_max = 30000.0
n_ell = 400
shear-shear = SOURCE-SOURCE 
verbose = F
get_kernel_peaks = F

[linear_alignment]
file = %(KCAP_PATH)s/cosmosis-standard-library/intrinsic_alignments/la_model/linear_alignments_interface.py
method = bk_corrected

[cl2xi]
file = %(KCAP_PATH)s/cosmosis-standard-library/shear/cl_to_xi_nicaea/nicaea_interface.so
corr_type = 0

[extrapolate_power]
file = %(KCAP_PATH)s/cosmosis-standard-library/boltzmann/extrapolate/extrapolate_power.py
kmax = 500.0

[xip_binned]
file = %(KCAP_PATH)s/cosebis/libxipm_binned.so
output_section_name= shear_xi_plus_binned ; (optional) the DEFAULT is xi_binned_plus
input_section_name= shear_xi_plus ; (optional) the DEFAULT depends on type
type=plus ; please specify this otherwise as plus or minus DEFAULT is plus

theta_min=0.5
theta_max=300.0
nTheta=9

weighted_binning = 1 ; set to zero for no binning
; if these files are given then we will ignore the theta values above
;theta_min_max_filename = theta_bin_edges_file.ascii ; (optional) these are the edges of the theta plus bins,

; only read if the theta_min_max_filename is given
; if InputNpair not given weighted binning is set to theta*delta_theta
; The files should be name like so: ${InputNpair}_nBins_${nBins}_Bin${i}_Bin${j}${InputNpair_suffix}
InputNpair = %(INPUT_FOLDER)s/xipm/XI_K1000_ALL_BLIND_%(blind)s_%(cat_version)s_nbins_4000_theta_0.5_300.0
InputNpair_suffix = .ascii ; (optional) DEFAULT is empty
Column_theta = 1 ; (optional) which column in the file is theta? DEFAULT is 0
Column_Npair = 11 ; which column in the file is npair? DEFAULT is 7
nBins_in = 5 ; number of redshift bins, this needs to be given, otherwise will set weighted binning to just theta

add_2D_cterm = 0 ; (optional) DEFAULT is 0: don't add it
; InputXipm_2D_cterm = %(INPUT_FOLDER)s/xip_2D_cterm.ascii; (optional) if not given and add_2D_cterm>0 then look in the block
; input_2D_section_name = xi_2D ; (optional) where to look in the block for xi_2D, it has to be the same format as other cosmosis outputs

add_c_term = 0 ; (optional) DEFAULT is 0: don't add it 



[xim_binned]
file = %(KCAP_PATH)s/cosebis/libxipm_binned.so
output_section_name = shear_xi_minus_binned ; (optional) the DEFAULT is xi_binned_minus
type = minus ; please specify this otherwise as plus or minus DEFAULT is plus
input_section_name = shear_xi_minus ; (optional) the DEFAULT depends on type

; you have to give at least one of these options otherwise it will use the default values.
; will look for theta_min, theta_max and nTheta then do log binning between min and max.
; if the file exists we will ignore, theta_list, theta_min,theta_max and nTheta
; if theta_list exists will ignore theta_min,theta_max and nTheta
theta_min = 0.5
theta_max = 300.0
nTheta = 9

weighted_binning = 1 ; set to zero for no binning

; only read if the theta_min_max_filename is given
; if InputNpair not given weighted binning is set to theta*delta_theta
; The files should be name like so: ${InputNpair}_nBins_${nBins}_Bin${i}_Bin${j}${InputNpair_suffix}
InputNpair = %(INPUT_FOLDER)s/xipm/XI_K1000_ALL_BLIND_%(blind)s_%(cat_version)s_nbins_4000_theta_0.5_300.0
InputNpair_suffix = .ascii ; (optional) DEFAULT is empty
Column_theta = 1 ; (optional) which column in the file is theta? DEFAULT is 1
Column_Npair = 11 ; which column in the file is npair? DEFAULT is 8, for treecor use 11
nBins_in = 5 ; number of redshift bins, this needs to be given, otherwise will set weighted binning to just theta

add_2D_cterm = 0 ; (optional) DEFAULT is 0: don't add it
;InputXipm_2D_cterm = %(INPUT_FOLDER)s/xim_2D_cterm.ascii; (optional) if not given and add_2D_cterm>0 then look in the block
;input_2D_section_name = xi_2D ; (optional) where to look in the block for xi_2D, it has to be the same format as other cosmosis outputs
; the full value of this depends on type: input_2D_section_name+= "_"+type


[scale_cuts]
file = %(KCAP_PATH)s/modules/scale_cuts/scale_cuts.py
output_section_name = theory_data_covariance
data_and_covariance_fits_filename = %(KCAP_PATH)s/runs/lfi_config/xipm_KIDS1000_BlindC_with_m_bias_V1.0.0A_ugriZYJHKs_photoz_SG_mask_LF_svn_309c_2Dbins_v2_goldclasses_Flag_SOM_Fid.fits
use_stats = xiP xiM
cut_pair_pnee = 1+1 2+1 2+2 2+3
keep_ang_peee = 100 1500
keep_ang_pnee = 100 1070
keep_ang_xip = 0.5 300
keep_ang_xim = 0.5 300
xi_plus_extension_name = xiP
xi_minus_extension_name = xiM
bandpower_ggl_extension_name = PneE
bandpower_e_cosmic_shear_extension_name = PeeE
cosebis_extension_name = En
xi_plus_section_name = shear_xi_plus_binned
xi_minus_section_name = shear_xi_minus_binned
bandpower_ggl_section_name = bandpower_galaxy_shear
bandpower_e_cosmic_shear_section_name = bandpower_shear_e
cosebis_section_name = cosebis
simulate = F
simulate_with_noise = T
mock_filename = 

[2x2pt_like]
file = %(KCAP_PATH)s/utils/mini_like.py
input_section_name = theory_data_covariance
like_name = 2x2pt_like
